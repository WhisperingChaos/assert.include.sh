#!/bin/bash

source base/assert.source.sh
source example.source.sh

test_assert(){
	local hostName="hNmGood1"
	# affirm environment variable value.
	# should succeed.
	assert_true '[ "$hostName" == '\''hNmGood1'\'' ]'
	# affirm environment variable value isn't 'hNmGood1'.
	# should fail.
	assert_false '[ "$hostName" == '\''hNmGood1'\'' ]'
	# affirm return code for function hostNameVerify is true when compliant
    # hostname supplied.
	# should succeed.
	assert_true 'hostNameVerify "$hostName"'
	# affirm no output from either STDERR or STEOUT when
	# compliant hostname supplied.
	# should succeed.
	# note - assert_true forwards the result of assert_output_true.
	# it doesn't check the return code of hostNameVerify.
	assert_true 'hostNameVerify "$hostName" 2>&1 | assert_output_true'
	# alternate form of assert_output_true where it executes in process.
	# should succeed.
	# is equivalent to immediately prior assert_true code.
	assert_output_true --- hostNameVerify "$hostName" 
	# affirm hostNameVerify returns false and generates an appropriate error.
	# should succeed.
	# relies on side effect if assertion fails as its failure will produce
	# error messages that are captured and compared to the expected set. since
	# assertion failure messages generally don't appear in expected output
	# the output generated by assert_false's failure results in the cascading
	# failure of assert_output_true.
	assert_output_true echo "Error: hostName='bad' length=3 less than minAllowed=4" \
		--- assert_false 'hostNameVerify "bad"'
	# affirm hostNameVerify returns true and generates no output.
	# should fail.
	# relies on side effect when assertion fails as it will produce error
	# messages that are captured and compared to the expected set. since
	# assertion failure messages generally don't appear in expected output
	# the output generated by assert_true's failure results in the cascading
	# failure of assert_output_true
	assert_output_true --- assert_true 'hostNameVerify "bad"'
	# affirm hostNameVerify returns at least some output.
	# should succeed.
	assert_output_false --- assert_true 'hostNameVerify "bad"'

}

main(){
	test_assert
	assert_return_code_set	
}
main
